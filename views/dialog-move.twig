{% set pathbrowse = currentPath %}
{% set multiselect = 1 %}
{% set multiselectFilesOnly = false %}
{% set startButtonValue = theUILang.fDiagMoveBut %}

{% extends "flm::dialog-window.twig" %}
{% block heading %}
    <legend>{{ theUILang.fDiagMoveSel }}</legend>
{% endblock %}

{% block scripts %}
    <script>
        if (!flm.ui.hasOwnProperty('dialogMove')) {
            flm.ui.dialogMove = function () {

            var dialogs = flm.ui.getDialogs();
            var diagId = dialogs.getDialogId('window');
            let self = this;

            // service
            self.doMove = function (filePaths, destination) {

                destination = $.trim(destination);

                var deferred = $.Deferred();

                if (!destination.length) {
                    deferred.reject('move: ' + theUILang.fDiagInvalidname);
                    return deferred.promise();
                }

                if (!$type(filePaths) || filePaths.length === 0) {
                    deferred.reject('move: ' + 'Empty paths');
                    return deferred.promise();
                }

                if (!flm.utils.isValidPath(destination)) {
                    // flm.manager.logAction('copy', theUILang.fDiagInvalidname);
                    deferred.reject('move: ' + theUILang.fDiagInvalidname);
                    return deferred.promise();
                }

                filePaths = flm.ui.browser.selectedTarget ? flm.manager.getFullPaths(filePaths) : filePaths;
                var cPath = flm.getCurrentPath();

                self.noty = $.noty(
                    {
                        text: theUILang.fStarts.move + " " + filePaths.length + " files",
                        layout: 'bottomLeft',
                        type: 'information',
                        timeout: 5000,
                        closeOnSelfClick: true
                    });

                return flm.api.move(filePaths, destination)
                    .then(function (result) {
                            (destination === flm.getCurrentPath()
                                || cPath === flm.getCurrentPath())
                            && flm.Refresh();

                            $(document).trigger(flm.EVENTS.move, [filePaths, destination]);
                            self.noty = $.noty(
                                {
                                    text: theUILang.flm_popup_move + ": " + filePaths.length,
                                    layout: 'bottomLeft',
                                    type: 'success',
                                    timeout: 10000,
                                    closeOnSelfClick: true
                                });
                            return result;
                        },
                        function (response) {
                            return response;
                        });
            };


            dialogs.onStart(function () {
                return self.doMove(dialogs.getCheckedList(diagId), dialogs.getTargetPath(diagId));
            });

        }
        }

        (flm.ui.dialogMove)(window);
    </script>
{% endblock %}



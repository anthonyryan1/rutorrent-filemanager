{% set pathbrowse = false %}
{% set multiselect = 1 %}
{% set multiselectFilesOnly = true %}

{% extends "flm::dialog-window.twig" %}
{% block heading %}
    <legend>{{ theUILang.fDiagSFVCreateSel }}</legend>
{% endblock %}

{% block content %}
    {{ window.pathBrowser(selectedTarget, theUILang.fDiagTo) }}

{#  <legend> {{ theUILang.fDiagCArchType }} </legend>#}
{#    <label style="float: left;">#}
{#        <select name="fman-checksum-type"  class="fman-checksum-type">#}
{#            <option value="sfv">sfv</option>#}
{#        </select>#}
{#    </label>#}

{% endblock %}

{% block scripts %}
    <script>
        (function () {
            var dialogs = flm.ui.getDialogs();
            var diagId = dialogs.getDialogId();
            var pathBrowser = dialogs.dirBrowserInput(diagId);
            var ext = 'sfv';

            dialogs.onStart(function () {
                var checksumFile = $.trim(dialogs.getTargetPath(diagId));
                var filePaths = dialogs.getCheckedList(diagId);
                var hasError;

                if (!checksumFile.length) {
                    hasError = theUILang.fDiagSFVempty;
                }
                else if (!$type(filePaths) || filePaths.length === 0) {
                    hasError = 'Empty paths';
                }
                else if (!flm.utils.isValidPath(checksumFile)) {
                    hasError = theUILang.fDiagInvalidname;
                }
                if($type(hasError))
                {
                    var def = $.Deferred();
                    def.reject({errcode: theUILang.fcSFV, msg: hasError + ': '+checksumFile});
                    return def.promise();
                }

                var cPath = flm.getCurrentPath();
                return flm.api.sfvCreate(flm.manager.stripJailPath(checksumFile), flm.manager.getFullPaths(filePaths))
                    .done(function (response) {
                        flm.Refresh(cPath);
                        return response;
                    });
            });

            const updateFilePath = function (path) {
                let filePath = flm.utils.replaceFilePath(path.val(), path.data('previousValue'), ext, ext);
                dialogs.updateTargetPath(diagId, filePath);
            };

            pathBrowser.change(function () {
                updateFilePath($(this));
            });

            updateFilePath(pathBrowser);
        })
        (window);
    </script>
{% endblock %}

